[dataset]
# tensor type (float or double)
tensor_type = float
dsbn = True
task_type = seg
root_dir  = /
1_train_csv = config_dual/data_vs/hrT2/train_source_like.csv
1_valid_csv = config_dual/data_vs/cet1/valid.csv
2_train_csv = config_dual/data_vs/hrT2/train_target_like.csv
2_valid_csv = config_dual/data_vs/ceT1/valid.csv

test_csv  = config_dual/data_vs/ceT1/train.csv

train_batch_size = 4

load_pixelwise_weight = False
# modality number
modal_num = 1

# data transforms
train_transform = [NormalizeWithMeanStd,Pad,RandomCrop, RandomFlip, LabelToProbability]
valid_transform = [NormalizeWithMeanStd,Pad,LabelToProbability]
test_transform  = [NormalizeWithMeanStd,Pad]

NormalizeWithMeanStd_channels = [0]
NormalizeWithMeanStd_mean = None
NormalizeWithMeanStd_std  = None
NormalizeWithMeanStd_mask = False
NormalizeWithMeanStd_random_fill = False
NormalizeWithMeanStd_inverse     = False


Pad_output_size = [28, 128, 128]
Pad_ceil_mode   = False
Pad_inverse     = True

RandomCrop_output_size = [28, 128, 128]
RandomCrop_foreground_focus = True
RandomCrop_foreground_ratio = 0.5
Randomcrop_mask_label       = [1, 2]
RandomCrop_inverse     = False

RandomFlip_flip_depth  = False
RandomFlip_flip_height = True
RandomFlip_flip_width  = True
RandomFlip_inverse     = False

LabelToProbability_class_num = 2
LabelToProbability_inverse   = False

[network]
# this section gives parameters for network
# the keys may be different for different networks

net_type = UNet2D5_dsbn
num_domains = 2

# number of class, required for segmentation task
class_num     = 2
in_chns       = 1
feature_chns  = [32, 64, 128, 256, 512]
conv_dims     = [2, 2, 3, 3, 3]
dropout       = [0.0, 0.0, 0.3, 0.4, 0.5]
bilinear      = False
deep_supervise = False
aes = False
[training]
aes = False
aes_para = None
train_fpl_uda  = True
dis = False
dis_para = None
val_t1 = True
val_t2 = True
dual = False
# list of gpus
gpus       = [0]
loss_type     = DiceLoss
DiceLoss_enable_pixel_weight = False
DiceLoss_enable_class_weight = False
loss_class_weight = [1, 1]
# for optimizers
optimizer     = Adam
learning_rate = 1e-4
momentum      = 0.9
weight_decay  = 1e-5

# for lr schedular (MultiStepLR)
lr_scheduler = MultiStepLR
lr_gamma      = 0.5
lr_milestones = [10000,20000,30000,40000]
ckpt_save_dir    = ./model_dual/vs_t2s_fpl
ckpt_save_prefix = dsbn

# start iter
iter_start = 0
iter_max   = 20000
iter_valid = 500
iter_save  = 50000
[testing]
# list of gpus
fpl = False
gpus       = [0]
domian_label = 1
ae = None
#   1:t2 0:t1
# checkpoint mode can be [0-latest, 1-best, 2-specified]
ckpt_mode         = 1
output_dir        = results_dual/
evaluation_mode   = True
test_time_dropout = False
# post_process = KeepLargestComponent
# use test time augmentation
tta_mode = 1

sliding_window_enable = True
sliding_window_size   = [28, 128, 128]
sliding_window_stride = [28, 128, 128]
[evaluation]
metric_1 = dice
metric_2 = assd
label_list = [1]
organ_name = tumor


ground_truth_folder_root = /your_dir/vs_data/T1_test/lab/
segmentation_folder_root = result/unet_vst2s
test_evaluation_image_pair    = config_dual/data_vs/t1_test_pair.csv
valid_evaluation_image_pair    = config_dual/data_vs/t1_valid_pair.csv

