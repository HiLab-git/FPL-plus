[dataset]
# tensor type (float or double)
tensor_type = float
dsbn = True
task_type = seg
root_dir  = /

# train_csv = config/data_vs/FPL-t2_40p_twostage_2022_train_1.csv
# valid_csv = config/data_vs/FPL-t2_40p_twostage_2022_valid_weight_2.csv
# 1_train_csv = config/data_vs/t1_train.csv
# 1_valid_csv = config/data_vs/t1_valid.csv
# 1_train_csv = config/data_vs/t2_train_fpl.csv
# 1_valid_csv = config/data_vs/t2_valid_fpl.csv
# 1_train_csv = config/data_vs/FPL-t2_train.csv
# 1_valid_csv = config/data_vs/FPL-t2_valid.csv
1_train_csv = config/data_vs/t1_train.csv
1_valid_csv = config/data_vs/FPL-t2_40p_twostage_2022_valid_weight_2.csv
# 2_train_csv = config/data_vs/FPL2022-80_02nii.csv
2_train_csv = config/data_vs/FPL2022-80_train_01_r2.csv
# 2_valid_csv = config/data_vs/FPL2022-80_valid_01_r2.csv
# # 1_valid_csv = config/data_vs/FPL-t2_40p_twostage_2022_valid_2.csv
# 1_train_csv = config/data_vs/FPL-t2_20p_twostage_2022_train_weight_flip.csv
# 1_valid_csv = config/data_vs/FPL-t2_40p_twostage_2022_valid_weight_2.csv
# 2_train_csv = config/data_vs/FPL-t2_20p_twostage_2022_train_weight_flip.csv
# 2_valid_csv = config/data_vs/FPL-t2_40p_twostage_2022_valid_weight_2.csv
2_valid_csv = config/data_vs/FPL-t2_40p_twostage_2022_valid_weight_2.csv
# 1_train_csv = config/data_vs/FPL-t2-t1_20p.csv
# 1_valid_csv = config/data_vs/FPL-t2-t1_20p_valid.csv
# 1_train_csv = config/data_vs/FPL-t2-t1_train.csv
# 1_valid_csv = config/data_vs/FPL-t2-t1_valid.csv
# 1_train_csv = config/data_vs/fake/dsbn_t1_train.csv
# 1_valid_csv = config/data_vs/fake/dsbn_t1_valid.csv
# 2_train_csv = config/data_vs/fake/dsbn_t2_train.csv
# # 2_valid_csv = config/data_vs/fake/dsbn_t2_valid.csv
# 2_valid_csv = config/data_vs/FPL-t2_40p_twostage_2022_valid_weight_2.csv


# test_csv  = config/data_vs/t2-t1_cyc_trainall_FPL.csv
# test_csv  = config/data_vs/t2-t1_cyc_trainall.csv
# test_csv  = config/data_vs/small_t2_train.csv
test_csv  = config/data_vs/t2_all_100.csv
# test_csv  = config/data_vs/t2-t1_cyc_trainall_FPL.csv
# test_csv  = config/data_vs/t2_test.csv
# test_csv  = config/data_vs/t2-t1_cyc_test.csv
train_batch_size = 4

load_pixelwise_weight = False
# modality number
modal_num = 1

# data transforms
train_transform = [NormalizeWithMeanStd,Pad,RandomCrop, RandomFlip, LabelToProbability]
valid_transform = [NormalizeWithMeanStd,Pad,LabelToProbability]
test_transform  = [NormalizeWithMeanStd,Pad]

NormalizeWithMeanStd_channels = [0]
NormalizeWithMeanStd_mean = None
NormalizeWithMeanStd_std  = None
NormalizeWithMeanStd_mask = False
NormalizeWithMeanStd_random_fill = False
NormalizeWithMeanStd_inverse     = False


Pad_output_size = [28, 128, 128]
Pad_ceil_mode   = False
Pad_inverse     = True

RandomCrop_output_size = [28, 128, 128]
RandomCrop_foreground_focus = True
RandomCrop_foreground_ratio = 0.5
Randomcrop_mask_label       = [1, 2]
RandomCrop_inverse     = False

RandomFlip_flip_depth  = False
RandomFlip_flip_height = True
RandomFlip_flip_width  = True
RandomFlip_inverse     = False

LabelToProbability_class_num = 2
LabelToProbability_inverse   = False

[network]
# this section gives parameters for network
# the keys may be different for different networks

net_type = UNet2D5_dsbn
num_domains = 2

# number of class, required for segmentation task
class_num     = 2
in_chns       = 1
feature_chns  = [32, 64, 128, 256, 512]
conv_dims     = [2, 2, 3, 3, 3]
dropout       = [0.0, 0.0, 0.3, 0.4, 0.5]
bilinear      = False
deep_supervise = False
[training]

train_fpl_uda  =False
dis = False
val_t2 = True
dual = False
# list of gpus
gpus       = [0]

loss_type     = DiceLoss
DiceLoss_enable_pixel_weight = False
DiceLoss_enable_class_weight = False
loss_class_weight = [1, 1]
# for optimizers
optimizer     = Adam
learning_rate = 1e-3
momentum      = 0.9
weight_decay  = 1e-5

# for lr schedular (MultiStepLR)
lr_scheduler = MultiStepLR
lr_gamma      = 0.5
lr_milestones = [10000,20000,30000,40000]


ckpt_save_dir    = ./model_vs/unet_2D5dcbn_vs_t1_faket2_twostage_double_acrtan1_r2
# ckpt_save_dir    = ./model_vs/unet_2D5dcbn_vs_t1
# ckpt_save_dir    = ./model_vs/unet_2D5dcbn_vs_t2
# ckpt_save_dir    = ./model_vs/unet_2D5dcbn_vs_t2_FPL_40p
# ckpt_save_dir    = ./model_vs/unet_2D5dcbn_vs_t2+t1_FPL_40p
# ckpt_save_dir    = ./model_vs/unet_2D5dcbn_vs_t2-f_FPL2021_test
# ckpt_save_dir    = ./model_vs/unet_2D5dcbn_vs_t2-t1_FPL2021
# ckpt_save_dir    = ./model_vs/unet_2D5dcbn_vs_t1-t2_fpl

ckpt_save_prefix = t2_unet2d

# start iter
iter_start = 81750
iter_max   = 83000
iter_valid = 50
iter_save  = 500
[testing]
# list of gpus
fpl = True
gpus       = [0]
domian_label = 1
#   1:t2 0:t1
# checkpoint mode can be [0-latest, 1-best, 2-specified]
# ckpt_name = [model_vs/unet_2D5dcbn_vs_t1_faket2_twostage_double_acrtan1/unet_2D5dcbn_vs_t1_faket2_twostage_double_acrtan1_81750.pt,model_vs/unet_2D5dcbn_vs_t1_faket2_twostage_double_acrtan2/unet_2D5dcbn_vs_t1_faket2_twostage_double_acrtan2_81850.pt,model_vs/unet_2D5dcbn_vs_t1_faket2_twostage_double_acrtan3/unet_2D5dcbn_vs_t1_faket2_twostage_double_acrtan3_81550.pt]
ckpt_name = model_vs/unet_2D5dcbn_vs_t1_faket2_twostage_double_acrtan3/unet_2D5dcbn_vs_t1_faket2_twostage_double_acrtan3_81550.pt
ckpt_mode         = 2
output_dir        = results/acrtan_three_folds_round1
evaluation_mode   = True
test_time_dropout = False
post_process = KeepLargestComponent
# use test time augmentation
tta_mode = 1

sliding_window_enable = True
sliding_window_size   = [28, 128, 128]
sliding_window_stride = [28, 128, 128]
# sliding_window_size   = [24, 192, 192]
# sliding_window_stride = [24, 192, 192]



