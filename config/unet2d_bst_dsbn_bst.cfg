[dataset]
# tensor type (float or double)
tensor_type = float
dsbn = True
task_type = seg
root_dir  = /


# 1_train_csv = config/data_bst/flair_train.csv
# 1_valid_csv = config/data_bst/flair_valid.csv
# 1_train_csv = config/data_bst/t2_train.csv
# 1_valid_csv = config/data_bst/t2_valid.csv
1_train_csv = config/data_bst/FPL-t2_train.csv
1_valid_csv = config/data_bst/FPL-t2_valid.csv
# 1_train_csv = config/data_bst/fake/dsbn_f_train.csv
# 1_valid_csv = config/data_bst/fake/dsbn_f_valid.csv
# 2_train_csv = config/data_bst/fake/dsbn_t_train.csv
# 2_valid_csv = config/data_bst/fake/dsbn_t_valid.csv



# test_csv  = config/data_bst/flair_test.csv
test_csv  = config/data_bst/t2_all.csv
# test_csv  = config/data_bst/t2-f_cyc_train_all.csv
# test_csv  = config/data_bst/small_t2_train.csv
# test_csv  = config/data_bst/t2_test.csv
# test_csv  = config/data_bst/t2-f_cyc_test.csv
# test_csv  = config/data_bst/t2_all_with_small.csv
train_batch_size = 4

load_pixelwise_weight = False
# modality number
modal_num = 1

# data transforms
train_transform = [NormalizeWithMeanStd,Pad,RandomCrop,LabelToProbability]
valid_transform = [NormalizeWithMeanStd,Pad,LabelToProbability]
test_transform  = [NormalizeWithMeanStd,Pad]
# train_transform = [NormalizeWithMeanStd,RandomCrop, RandomFlip, LabelToProbability]
# valid_transform = [NormalizeWithMeanStd,LabelToProbability]
# test_transform  = [NormalizeWithMeanStd]

NormalizeWithMeanStd_channels = [0]
NormalizeWithMeanStd_mean = None
NormalizeWithMeanStd_std  = None
NormalizeWithMeanStd_mask = False
NormalizeWithMeanStd_random_fill = False
NormalizeWithMeanStd_inverse     = False

Pad_output_size = [32, 128, 128]
Pad_ceil_mode   = False
Pad_inverse     = True

# bst
RandomCrop_output_size = [32, 128, 128]
# vs
# RandomCrop_output_size = [28, 128, 128]
RandomCrop_foreground_focus = True
RandomCrop_foreground_ratio = 0.5
Randomcrop_mask_label       = [1, 2]
RandomCrop_inverse     = False

RandomFlip_flip_depth  = False
RandomFlip_flip_height = False
RandomFlip_flip_width  = True
RandomFlip_inverse     = False

LabelToProbability_class_num = 2
LabelToProbability_inverse   = False

[network]
# this section gives parameters for network
# the keys may be different for different networks

# type of network
# net_type = UNet2D_dsbn
# UNet2D5_scbn
net_type = UNet2D5_dsbn
num_domains = 1
# number of class, required for segmentation task
class_num     = 2
in_chns       = 1
feature_chns  = [32, 64, 128, 256, 512]
conv_dims     = [2, 2, 3, 3, 3]
dropout       = [0.0, 0.0, 0.3, 0.4, 0.5]
bilinear      = False
deep_supervise = False
[training]
# list of gpus
gpus       = [0]
train_fpl_uda  =False
loss_type     = DiceLoss
DiceLoss_enable_pixel_weight = False
DiceLoss_enable_class_weight = False
loss_class_weight = [1, 1]
# for optimizers
optimizer     = Adam
learning_rate = 1e-2
momentum      = 0.9
weight_decay  = 1e-5

# for lr schedular (MultiStepLR)
lr_scheduler = MultiStepLR
lr_gamma      = 0.5
lr_milestones = [10000,20000,30000,40000]

# ckpt_save_dir    = ./model_bst/unet_2D5dcbn_bst_flair
# ckpt_save_dir    = ./model_bst/unet_2D5dcbn_bst_t2
# ckpt_save_dir    = ./model_bst/unet_2D5dcbn_bst_flair_faket2
ckpt_save_dir    = ./model_bst/FPL-_bst_t2_40p

ckpt_save_prefix = t2_unet2d

# start iter
iter_start = 0
iter_max   = 80000
iter_valid = 500
iter_save  = 8000

[testing]
# list of gpus
fpl = True
gpus       = [0]
domian_label = 0
# 0:f 1:t2 
# checkpoint mode can be [0-latest, 1-best, 2-specified]
ckpt_mode         = 1
output_dir        = results_bst/FPL-tempo
evaluation_mode   = True
test_time_dropout = False
# post_process = KeepLargestComponent
# use test time augmentation
tta_mode = 0

sliding_window_enable = True
# sliding_window_size   = [32, 128, 128]
# sliding_window_stride = [32, 128, 128]
sliding_window_size   = [24, 224, 224]
sliding_window_stride = [24, 224, 224]



